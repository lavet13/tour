server {
    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl reuseport;
    listen [::]:443 ssl reuseport;

    # Replace with your actual domain
    server_name donbass-tour.online www.donbass-tour.online;

    # SSL certificate configuration
    ssl_certificate         /etc/letsencrypt/live/donbass-tour.online/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/donbass-tour.online/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/donbass-tour.online/chain.pem;

    # SSL parameters
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets on; # Enable session tickets for better resumption
    ssl_buffer_size 4k;

    # Optimized cipher suite
    ssl_prefer_server_ciphers off; # Let clients choose their preferred cipher
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    # Adjusted connection handling for testing
    keepalive_timeout 15s;
    keepalive_requests 100;
    reset_timedout_connection on;  # Close timed out client connections
    client_body_timeout 15s;
    client_header_timeout 15s;
    send_timeout 15s;

    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Other security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

     # Load the Diffie-Hellman parameter
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    client_max_body_size 20M;  # Increase this value as needed

    include /etc/nginx/user_conf.d/gzip.conf;


    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html =404;
    }

    location /graphql {
        proxy_pass http://tour-graphql:4000/graphql;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # SSE specific settings
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # Configuration for serving the Telegram mini-app
    location /telegram-mini-app/ {
	alias /usr/share/nginx/telegram-mini-app/;
	try_files $uri $uri/ /telegram-mini-app/index.html =404;

        # Required headers for Telegram Mini Apps
	add_header 'Access-Control-Allow-Origin' 'https://telegram.org' always;
	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
	add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
	add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Apply the same security headers as your main site
	add_header X-Content-Type-Options "nosniff" always;
	add_header X-Frame-Options "SAMEORIGIN" always;
	add_header X-XSS-Protection "1; mode=block" always;
	add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }
}

server {
    # Drop any request that does not match any of the other server names.
    listen               443 ssl default_server;
    ssl_reject_handshake on;
}
