# Redirect www.donbass-tour.online to donbass-tour.online
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name www.donbass-tour.online;

    # SSL certificate configuration (same as main server)
    ssl_certificate         /etc/letsencrypt/live/donbass-tour-prod/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/donbass-tour-prod/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/donbass-tour-prod/chain.pem;

    # Optimized cipher suite based on SSL Labs report

    # SSL parameters
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;

    # Optimized cipher suite based on SSL Labs report
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    # Redirect all requests to non-www version
    return 301 https://donbass-tour.online$request_uri;
}

server {
    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    # Replace with your actual domain
    server_name donbass-tour.online;

    # SSL certificate configuration
    ssl_certificate         /etc/letsencrypt/live/donbass-tour-prod/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/donbass-tour-prod/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/donbass-tour-prod/chain.pem;

    # SSL parameters
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;

    # Optimized cipher suite based on SSL Labs report
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://telegram.org https://mc.yandex.ru https://mc.yandex.com; connect-src 'self' https://mc.yandex.ru https://mc.yandex.com; frame-src 'self' https://oauth.telegram.org https://mc.yandex.com https://mc.yandex.ru; img-src 'self' data: https: blob: https://t.me;" always;

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;

    # Load the Diffie-Hellman parameter
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    client_max_body_size 20M;  # Increase this value as needed

    include /etc/nginx/user_conf.d/gzip.conf;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html =404;
    }

    location /device.rsp {
        return 444; # Silently drop the connection
    }

    location ~* ^/uploads/images/.*\.(jpg|jpeg|png|gif|webp)$ {
      root /usr/share/nginx; # путь к корню, где смонтирован volume
      access_log off;
      expires 30d;
      add_header Cache-Control "public";
    }

    location /graphql {
        limit_req zone=graphql_limit burst=25 nodelay;
        limit_req_status 429;
        limit_req_log_level warn;
        proxy_pass http://tour-graphql:4000/graphql;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # SSE specific settings
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # Configuration for serving the Telegram mini-app
    location /telegram-mini-app/ {
        alias /usr/share/nginx/telegram-mini-app/;
        try_files $uri $uri/ /telegram-mini-app/index.html =404;

              # Required headers for Telegram Mini Apps
        add_header 'Access-Control-Allow-Origin' 'https://telegram.org' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

              # Apply the same security headers as your main site
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }
}

server {
    # Drop any request that does not match any of the other server names.
    listen               443 ssl default_server;
    ssl_reject_handshake on;
}
